---
volumes:
  media:
  cache:
  jellyfin:
  jellyseerr:
  radarr:
  sonarr:
  prowlarr:

services:
  jellyfin:
    image: jellyfin/jellyfin
    container_name: jellyfin
    user: 1000:1000
    ports:
      - '8096:8096'
    volumes:
      - jellyfin:/config
      - cache:/cache
      - media:/media:ro
    environment:
      - TZ=Europe/Madrid
    restart: 'unless-stopped'
    # Optional - alternative address used for autodiscovery
    # environment:
      # - JELLYFIN_PublishedServerUrl=http://${HOST}
    # Optional - may be necessary for docker healthcheck to pass if running in host network mode
    extra_hosts:
      - 'host.docker.internal:host-gateway'

  jellyseerr:
    image: fallenbagel/jellyseerr:latest
    container_name: jellyseerr
    environment:
      # - LOG_LEVEL=debug
      - TZ=Europe/Madrid
      # - PORT=5055 #optional
    ports:
      - '8097:5055'
    volumes:
      - jellyseerr:/app/config
    restart: unless-stopped

  sonarr:
    container_name: sonarr
    image: ghcr.io/hotio/sonarr
    ports:
      - "8099:8989"
    environment:
      - PUID=1000
      - PGID=1000
      - UMASK=002
      - TZ=Europe/Madrid
    volumes:
      - sonarr:/config
      - media:/data

  radarr:
    container_name: radarr
    image: ghcr.io/hotio/radarr
    ports:
      - "8098:7878"
    environment:
      - PUID=1000
      - PGID=1000
      - UMASK=002
      - TZ=Europe/Madrid
    volumes:
      - radarr:/config
      - media:/data
    
  prowlarr:
    container_name: prowlarr
    image: ghcr.io/hotio/prowlarr
    ports:
      - "9095:9696"
    environment:
      - PUID=1000
      - PGID=1000
      - UMASK=002
      - TZ=Europe/Madrid
    volumes:
      - prowlarr:/config